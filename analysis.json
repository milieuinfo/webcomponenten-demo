{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`vo-buildversie`\nVisualiseert de build versie en het tijdstip van de applicatie.",
      "summary": "",
      "path": "vo-buildversie.js",
      "properties": [
        {
          "name": "_hasRequestedUpdate",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 355,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "updateComplete",
          "type": "Promise",
          "description": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. This getter can be implemented to\nawait additional state. For example, it is sometimes useful to await a\nrendered element before fulfilling this Promise. To do this, first await\n`super.updateComplete` then any subsequent state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_versieTemplate",
          "type": "TemplateResult",
          "description": "Genereert en geeft de versie template.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_tijdstipTemplate",
          "type": "TemplateResult",
          "description": "Genereert en geeft de tijdstip template.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "versie",
          "type": "string | null | undefined",
          "description": "Versie van de applicatie.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 12
            },
            "end": {
              "line": 16,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "tijdstip",
          "type": "string | null | undefined",
          "description": "Tijdstip waarom de applicatie versie gemaakt werd.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 12
            },
            "end": {
              "line": 20,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "initialize",
          "description": "Performs element initialization. By default this calls `createRenderRoot`\nto create the element `renderRoot` node and captures any pre-set values for\nregistered properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_saveInstanceProperties",
          "description": "Fixes any properties set on the instance before upgrade time.\nOtherwise these would shadow the accessor and break these properties.\nThe properties are stored in a Map which is played back after the\nconstructor runs. Note, on very old versions of Safari (<=9) or Chrome\n(<=41), properties created for native platform properties like (`id` or\n`name`) may not have default values set in the element constructor. On\nthese browsers native properties appear on instances and therefore their\ndefault value will overwrite any element default (e.g. if the element sets\nthis.id = 'id' in the constructor, the 'id' will become '' since this is\nthe native platform default).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_applyInstanceProperties",
          "description": "Applies previously saved instance properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createRenderRoot",
          "description": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(Element | DocumentFragment)",
            "desc": "Returns a node into which to render."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "connectedCallback",
          "description": "Uses ShadyCSS to keep element DOM updated.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "disconnectedCallback",
          "description": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 248,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 29
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Synchronizes property values when attributes change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyToAttribute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "requestUpdate",
          "description": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} (optional) name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} (optional) old value of requesting property"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A Promise that is resolved when the update completes."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_requestPropertyUpdate",
          "description": "Requests an update for a specific property and records change information.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} old value of requesting property"
            },
            {
              "name": "options",
              "description": "{PropertyDeclaration}"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_invalidate",
          "description": "Invalidates the element causing it to asynchronously update regardless\nof whether or not any property changes are pending. This method is\nautomatically called when any registered property changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 354,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_validate",
          "description": "Validates the element by updating it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_markUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 379,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "shouldUpdate",
          "description": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 405,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "update",
          "description": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update.\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lit-element.js",
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "updated",
          "description": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 433,
              "column": 4
            },
            "end": {
              "line": 433,
              "column": 34
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "firstUpdated",
          "description": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 443,
              "column": 4
            },
            "end": {
              "line": 443,
              "column": 39
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "render",
          "description": "Rendert het element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 44,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "createProperty",
          "description": "Creates a property accessor on the element prototype if one does not exist.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_finalize",
          "description": "Creates property accessors for registered properties and ensures\nany superclasses are also finalized.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeNameForProperty",
          "description": "Returns the property name for the given attribute `name`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_valueHasChanged",
          "description": "Returns true if a property should request an update.\nCalled when a property value is set and uses the `hasChanged`\noption for the property if present or a strict identity check.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "old"
            },
            {
              "name": "hasChanged",
              "defaultValue": "notEqual"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueFromAttribute",
          "description": "Returns the property value for the given attribute value.\nCalled via the `attributeChangedCallback` and uses the property's `type`\nor `type.fromAttribute` property option.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueToAttribute",
          "description": "Returns the attribute value for the given property value. If this\nreturns undefined, the property will *not* be reflected to an attribute.\nIf this returns null, the attribute will be removed, otherwise the\nattribute will be set to the value.\nThis uses the property's `reflect` and `type.toAttribute` property options.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        }
      ],
      "demos": [
        {
          "url": "demo/vo-buildversie.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 77,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "VoBuildversie",
      "attributes": [
        {
          "name": "versie",
          "description": "Versie van de applicatie.",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 12
            },
            "end": {
              "line": 16,
              "column": 26
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "tijdstip",
          "description": "Tijdstip waarom de applicatie versie gemaakt werd.",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 12
            },
            "end": {
              "line": 20,
              "column": 28
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "vo-buildversie"
    },
    {
      "description": "`vo-buildinfo`\nVisualiseert de build informatie van de applicatie.",
      "summary": "",
      "path": "vo-buildinfo.js",
      "properties": [
        {
          "name": "_hasRequestedUpdate",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 355,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "updateComplete",
          "type": "Promise",
          "description": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. This getter can be implemented to\nawait additional state. For example, it is sometimes useful to await a\nrendered element before fulfilling this Promise. To do this, first await\n`super.updateComplete` then any subsequent state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "URL waar de build informatie staat | `{'admin/info'}`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 12
            },
            "end": {
              "line": 16,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_versie",
          "type": "string | null | undefined",
          "description": "Build versie.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 12
            },
            "end": {
              "line": 20,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_tijdstip",
          "type": "string | null | undefined",
          "description": "Build tijdstip.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 12
            },
            "end": {
              "line": 24,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "initialize",
          "description": "Performs element initialization. By default this calls `createRenderRoot`\nto create the element `renderRoot` node and captures any pre-set values for\nregistered properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_saveInstanceProperties",
          "description": "Fixes any properties set on the instance before upgrade time.\nOtherwise these would shadow the accessor and break these properties.\nThe properties are stored in a Map which is played back after the\nconstructor runs. Note, on very old versions of Safari (<=9) or Chrome\n(<=41), properties created for native platform properties like (`id` or\n`name`) may not have default values set in the element constructor. On\nthese browsers native properties appear on instances and therefore their\ndefault value will overwrite any element default (e.g. if the element sets\nthis.id = 'id' in the constructor, the 'id' will become '' since this is\nthe native platform default).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_applyInstanceProperties",
          "description": "Applies previously saved instance properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createRenderRoot",
          "description": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(Element | DocumentFragment)",
            "desc": "Returns a node into which to render."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "connectedCallback",
          "description": "Uses ShadyCSS to keep element DOM updated.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "disconnectedCallback",
          "description": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 248,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 29
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Synchronizes property values when attributes change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyToAttribute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "requestUpdate",
          "description": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} (optional) name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} (optional) old value of requesting property"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A Promise that is resolved when the update completes."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_requestPropertyUpdate",
          "description": "Requests an update for a specific property and records change information.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} old value of requesting property"
            },
            {
              "name": "options",
              "description": "{PropertyDeclaration}"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_invalidate",
          "description": "Invalidates the element causing it to asynchronously update regardless\nof whether or not any property changes are pending. This method is\nautomatically called when any registered property changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 354,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_validate",
          "description": "Validates the element by updating it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_markUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 379,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "shouldUpdate",
          "description": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 405,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "update",
          "description": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update.\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lit-element.js",
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 4
            },
            "end": {
              "line": 48,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "firstUpdated",
          "description": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 443,
              "column": 4
            },
            "end": {
              "line": 443,
              "column": 39
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "render",
          "description": "Rendert het element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        },
        {
          "name": "_clearInfo",
          "description": "Zet de build `_versie` en build `_tijdstip` attributen op undefined.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 4
            },
            "end": {
              "line": 55,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setInfo",
          "description": "Zet de build `_versie` en build `_tijdstip` attributen.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 4
            },
            "end": {
              "line": 63,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "versie"
            },
            {
              "name": "tijdstip"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeBuildinfo",
          "description": "Haalt de build informatie op en zet de build `_versie` en build `_tijdstip` attributen.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [
        {
          "name": "createProperty",
          "description": "Creates a property accessor on the element prototype if one does not exist.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_finalize",
          "description": "Creates property accessors for registered properties and ensures\nany superclasses are also finalized.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeNameForProperty",
          "description": "Returns the property name for the given attribute `name`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_valueHasChanged",
          "description": "Returns true if a property should request an update.\nCalled when a property value is set and uses the `hasChanged`\noption for the property if present or a strict identity check.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "old"
            },
            {
              "name": "hasChanged",
              "defaultValue": "notEqual"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueFromAttribute",
          "description": "Returns the property value for the given attribute value.\nCalled via the `attributeChangedCallback` and uses the property's `type`\nor `type.fromAttribute` property option.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueToAttribute",
          "description": "Returns the attribute value for the given property value. If this\nreturns undefined, the property will *not* be reflected to an attribute.\nIf this returns null, the attribute will be removed, otherwise the\nattribute will be set to the value.\nThis uses the property's `reflect` and `type.toAttribute` property options.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_fetchInfo",
          "description": "Haalt de build informatie op.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url"
            }
          ]
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 93,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "VoBuildinfo",
      "attributes": [
        {
          "name": "url",
          "description": "URL waar de build informatie staat | `{'admin/info'}`.",
          "sourceRange": {
            "start": {
              "line": 16,
              "column": 12
            },
            "end": {
              "line": 16,
              "column": 23
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "vo-buildinfo"
    },
    {
      "description": "`vo-font`\nDe standaard font voor websites en applicaties van de Vlaamse overheid",
      "summary": "",
      "path": "vo-font.js",
      "properties": [
        {
          "name": "_hasRequestedUpdate",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 355,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "updateComplete",
          "type": "Promise",
          "description": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. This getter can be implemented to\nawait additional state. For example, it is sometimes useful to await a\nrendered element before fulfilling this Promise. To do this, first await\n`super.updateComplete` then any subsequent state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        }
      ],
      "methods": [
        {
          "name": "initialize",
          "description": "Performs element initialization. By default this calls `createRenderRoot`\nto create the element `renderRoot` node and captures any pre-set values for\nregistered properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_saveInstanceProperties",
          "description": "Fixes any properties set on the instance before upgrade time.\nOtherwise these would shadow the accessor and break these properties.\nThe properties are stored in a Map which is played back after the\nconstructor runs. Note, on very old versions of Safari (<=9) or Chrome\n(<=41), properties created for native platform properties like (`id` or\n`name`) may not have default values set in the element constructor. On\nthese browsers native properties appear on instances and therefore their\ndefault value will overwrite any element default (e.g. if the element sets\nthis.id = 'id' in the constructor, the 'id' will become '' since this is\nthe native platform default).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_applyInstanceProperties",
          "description": "Applies previously saved instance properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createRenderRoot",
          "description": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(Element | DocumentFragment)",
            "desc": "Returns a node into which to render."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "connectedCallback",
          "description": "Uses ShadyCSS to keep element DOM updated.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "disconnectedCallback",
          "description": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 248,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 29
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Synchronizes property values when attributes change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyToAttribute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "requestUpdate",
          "description": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} (optional) name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} (optional) old value of requesting property"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A Promise that is resolved when the update completes."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_requestPropertyUpdate",
          "description": "Requests an update for a specific property and records change information.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} old value of requesting property"
            },
            {
              "name": "options",
              "description": "{PropertyDeclaration}"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_invalidate",
          "description": "Invalidates the element causing it to asynchronously update regardless\nof whether or not any property changes are pending. This method is\nautomatically called when any registered property changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 354,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_validate",
          "description": "Validates the element by updating it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_markUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 379,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "shouldUpdate",
          "description": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 405,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "update",
          "description": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update.\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lit-element.js",
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "updated",
          "description": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 433,
              "column": 4
            },
            "end": {
              "line": 433,
              "column": 34
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "firstUpdated",
          "description": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 443,
              "column": 4
            },
            "end": {
              "line": 443,
              "column": 39
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "render",
          "description": "Rendert het element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 1
            },
            "end": {
              "line": 112,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "createProperty",
          "description": "Creates a property accessor on the element prototype if one does not exist.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_finalize",
          "description": "Creates property accessors for registered properties and ensures\nany superclasses are also finalized.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeNameForProperty",
          "description": "Returns the property name for the given attribute `name`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_valueHasChanged",
          "description": "Returns true if a property should request an update.\nCalled when a property value is set and uses the `hasChanged`\noption for the property if present or a strict identity check.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "old"
            },
            {
              "name": "hasChanged",
              "defaultValue": "notEqual"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueFromAttribute",
          "description": "Returns the property value for the given attribute value.\nCalled via the `attributeChangedCallback` and uses the property's `type`\nor `type.fromAttribute` property option.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueToAttribute",
          "description": "Returns the attribute value for the given property value. If this\nreturns undefined, the property will *not* be reflected to an attribute.\nIf this returns null, the attribute will be removed, otherwise the\nattribute will be set to the value.\nThis uses the property's `reflect` and `type.toAttribute` property options.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        }
      ],
      "demos": [
        {
          "url": "demo/vo-font.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 113,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "VoFont",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "vo-font"
    },
    {
      "description": "`vo-footer`\nDe standaard footer voor websites en applicaties van de Vlaamse overheid\n\n### Styling\n\nDe volgende properties en mixins zijn beschikbaar voor stijl:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--vo-footer-background` | de footer achtergrondkleur | `none`\n`--vo-footer-color` | de tekst kleur | `rgb(184, 184, 184)`\n`--vo-footer-a-color` | de link tekst kleur | `rgb(184, 184, 184)`\n`--vo-footer-a-hover-color` | de link zweef tekst kleur | `white`",
      "summary": "",
      "path": "vo-footer.js",
      "properties": [
        {
          "name": "_hasRequestedUpdate",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 355,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "updateComplete",
          "type": "Promise",
          "description": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. This getter can be implemented to\nawait additional state. For example, it is sometimes useful to await a\nrendered element before fulfilling this Promise. To do this, first await\n`super.updateComplete` then any subsequent state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        }
      ],
      "methods": [
        {
          "name": "initialize",
          "description": "Performs element initialization. By default this calls `createRenderRoot`\nto create the element `renderRoot` node and captures any pre-set values for\nregistered properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_saveInstanceProperties",
          "description": "Fixes any properties set on the instance before upgrade time.\nOtherwise these would shadow the accessor and break these properties.\nThe properties are stored in a Map which is played back after the\nconstructor runs. Note, on very old versions of Safari (<=9) or Chrome\n(<=41), properties created for native platform properties like (`id` or\n`name`) may not have default values set in the element constructor. On\nthese browsers native properties appear on instances and therefore their\ndefault value will overwrite any element default (e.g. if the element sets\nthis.id = 'id' in the constructor, the 'id' will become '' since this is\nthe native platform default).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_applyInstanceProperties",
          "description": "Applies previously saved instance properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createRenderRoot",
          "description": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(Element | DocumentFragment)",
            "desc": "Returns a node into which to render."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "connectedCallback",
          "description": "Uses ShadyCSS to keep element DOM updated.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "disconnectedCallback",
          "description": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 248,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 29
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Synchronizes property values when attributes change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyToAttribute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "requestUpdate",
          "description": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} (optional) name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} (optional) old value of requesting property"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A Promise that is resolved when the update completes."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_requestPropertyUpdate",
          "description": "Requests an update for a specific property and records change information.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} old value of requesting property"
            },
            {
              "name": "options",
              "description": "{PropertyDeclaration}"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_invalidate",
          "description": "Invalidates the element causing it to asynchronously update regardless\nof whether or not any property changes are pending. This method is\nautomatically called when any registered property changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 354,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_validate",
          "description": "Validates the element by updating it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_markUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 379,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "shouldUpdate",
          "description": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 405,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "update",
          "description": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update.\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lit-element.js",
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "updated",
          "description": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 433,
              "column": 4
            },
            "end": {
              "line": 433,
              "column": 34
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "firstUpdated",
          "description": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 443,
              "column": 4
            },
            "end": {
              "line": 443,
              "column": 39
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "render",
          "description": "Rendert het element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 28,
              "column": 1
            },
            "end": {
              "line": 150,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "createProperty",
          "description": "Creates a property accessor on the element prototype if one does not exist.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_finalize",
          "description": "Creates property accessors for registered properties and ensures\nany superclasses are also finalized.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeNameForProperty",
          "description": "Returns the property name for the given attribute `name`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_valueHasChanged",
          "description": "Returns true if a property should request an update.\nCalled when a property value is set and uses the `hasChanged`\noption for the property if present or a strict identity check.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "old"
            },
            {
              "name": "hasChanged",
              "defaultValue": "notEqual"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueFromAttribute",
          "description": "Returns the property value for the given attribute value.\nCalled via the `attributeChangedCallback` and uses the property's `type`\nor `type.fromAttribute` property option.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueToAttribute",
          "description": "Returns the attribute value for the given property value. If this\nreturns undefined, the property will *not* be reflected to an attribute.\nIf this returns null, the attribute will be removed, otherwise the\nattribute will be set to the value.\nThis uses the property's `reflect` and `type.toAttribute` property options.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        }
      ],
      "demos": [
        {
          "url": "demo/vo-footer.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 151,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "VoFooter",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "vo-footer"
    },
    {
      "description": "`vo-header`\nDe standaard header voor websites en applicaties van de Vlaamse overheid\n\n### Styling\n\nDe volgende properties en mixins zijn beschikbaar voor stijl:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--vo-header-wrapper-style` | de wrapper mixin | `{}`",
      "summary": "",
      "path": "vo-header.js",
      "properties": [
        {
          "name": "_hasRequestedUpdate",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 355,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "updateComplete",
          "type": "Promise",
          "description": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. This getter can be implemented to\nawait additional state. For example, it is sometimes useful to await a\nrendered element before fulfilling this Promise. To do this, first await\n`super.updateComplete` then any subsequent state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        }
      ],
      "methods": [
        {
          "name": "initialize",
          "description": "Performs element initialization. By default this calls `createRenderRoot`\nto create the element `renderRoot` node and captures any pre-set values for\nregistered properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_saveInstanceProperties",
          "description": "Fixes any properties set on the instance before upgrade time.\nOtherwise these would shadow the accessor and break these properties.\nThe properties are stored in a Map which is played back after the\nconstructor runs. Note, on very old versions of Safari (<=9) or Chrome\n(<=41), properties created for native platform properties like (`id` or\n`name`) may not have default values set in the element constructor. On\nthese browsers native properties appear on instances and therefore their\ndefault value will overwrite any element default (e.g. if the element sets\nthis.id = 'id' in the constructor, the 'id' will become '' since this is\nthe native platform default).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_applyInstanceProperties",
          "description": "Applies previously saved instance properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createRenderRoot",
          "description": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(Element | DocumentFragment)",
            "desc": "Returns a node into which to render."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "connectedCallback",
          "description": "Uses ShadyCSS to keep element DOM updated.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "disconnectedCallback",
          "description": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 248,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 29
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Synchronizes property values when attributes change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyToAttribute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "requestUpdate",
          "description": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} (optional) name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} (optional) old value of requesting property"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A Promise that is resolved when the update completes."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_requestPropertyUpdate",
          "description": "Requests an update for a specific property and records change information.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} old value of requesting property"
            },
            {
              "name": "options",
              "description": "{PropertyDeclaration}"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_invalidate",
          "description": "Invalidates the element causing it to asynchronously update regardless\nof whether or not any property changes are pending. This method is\nautomatically called when any registered property changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 354,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_validate",
          "description": "Validates the element by updating it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_markUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 379,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "shouldUpdate",
          "description": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 405,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "update",
          "description": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update.\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lit-element.js",
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "updated",
          "description": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 433,
              "column": 4
            },
            "end": {
              "line": 433,
              "column": 34
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "firstUpdated",
          "description": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 443,
              "column": 4
            },
            "end": {
              "line": 443,
              "column": 39
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "render",
          "description": "Rendert het element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 98,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "createProperty",
          "description": "Creates a property accessor on the element prototype if one does not exist.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_finalize",
          "description": "Creates property accessors for registered properties and ensures\nany superclasses are also finalized.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeNameForProperty",
          "description": "Returns the property name for the given attribute `name`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_valueHasChanged",
          "description": "Returns true if a property should request an update.\nCalled when a property value is set and uses the `hasChanged`\noption for the property if present or a strict identity check.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "old"
            },
            {
              "name": "hasChanged",
              "defaultValue": "notEqual"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueFromAttribute",
          "description": "Returns the property value for the given attribute value.\nCalled via the `attributeChangedCallback` and uses the property's `type`\nor `type.fromAttribute` property option.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueToAttribute",
          "description": "Returns the attribute value for the given property value. If this\nreturns undefined, the property will *not* be reflected to an attribute.\nIf this returns null, the attribute will be removed, otherwise the\nattribute will be set to the value.\nThis uses the property's `reflect` and `type.toAttribute` property options.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        }
      ],
      "demos": [
        {
          "url": "demo/vo-header.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 99,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "VoHeader",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "vo-header"
    },
    {
      "description": "`vo-merklogo` Het logo van de Vlaamse overheid",
      "summary": "",
      "path": "vo-merklogo.js",
      "properties": [
        {
          "name": "_hasRequestedUpdate",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 355,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "updateComplete",
          "type": "Promise",
          "description": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. This getter can be implemented to\nawait additional state. For example, it is sometimes useful to await a\nrendered element before fulfilling this Promise. To do this, first await\n`super.updateComplete` then any subsequent state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_tekstTemplate",
          "type": "void",
          "description": "Genereert en geeft de tekst template.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "kleur",
          "type": "string | null | undefined",
          "description": "Achtergrondkleur in hex, rgb or rgba.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 15,
              "column": 12
            },
            "end": {
              "line": 15,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "tekst",
          "type": "string | null | undefined",
          "description": "Tekst die naast het logo zal gerenderd worden.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 12
            },
            "end": {
              "line": 19,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "initialize",
          "description": "Performs element initialization. By default this calls `createRenderRoot`\nto create the element `renderRoot` node and captures any pre-set values for\nregistered properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_saveInstanceProperties",
          "description": "Fixes any properties set on the instance before upgrade time.\nOtherwise these would shadow the accessor and break these properties.\nThe properties are stored in a Map which is played back after the\nconstructor runs. Note, on very old versions of Safari (<=9) or Chrome\n(<=41), properties created for native platform properties like (`id` or\n`name`) may not have default values set in the element constructor. On\nthese browsers native properties appear on instances and therefore their\ndefault value will overwrite any element default (e.g. if the element sets\nthis.id = 'id' in the constructor, the 'id' will become '' since this is\nthe native platform default).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_applyInstanceProperties",
          "description": "Applies previously saved instance properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createRenderRoot",
          "description": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(Element | DocumentFragment)",
            "desc": "Returns a node into which to render."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "connectedCallback",
          "description": "Uses ShadyCSS to keep element DOM updated.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "disconnectedCallback",
          "description": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 248,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 29
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Synchronizes property values when attributes change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyToAttribute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "requestUpdate",
          "description": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} (optional) name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} (optional) old value of requesting property"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A Promise that is resolved when the update completes."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_requestPropertyUpdate",
          "description": "Requests an update for a specific property and records change information.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} old value of requesting property"
            },
            {
              "name": "options",
              "description": "{PropertyDeclaration}"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_invalidate",
          "description": "Invalidates the element causing it to asynchronously update regardless\nof whether or not any property changes are pending. This method is\nautomatically called when any registered property changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 354,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_validate",
          "description": "Validates the element by updating it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_markUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 379,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "shouldUpdate",
          "description": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 405,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "update",
          "description": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update.\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lit-element.js",
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "updated",
          "description": "Kijkt naar welke properties aangepast zijn, en verwerkt deze aanpassingen.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "firstUpdated",
          "description": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 443,
              "column": 4
            },
            "end": {
              "line": 443,
              "column": 39
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "render",
          "description": "Rendert het element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 28,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        },
        {
          "name": "_wijzigAchtergrondKleur",
          "description": "Wijzigt de achtergrondkleur naar de `kleur` als die bepaald is.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 114,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "kleur"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "createProperty",
          "description": "Creates a property accessor on the element prototype if one does not exist.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_finalize",
          "description": "Creates property accessors for registered properties and ensures\nany superclasses are also finalized.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeNameForProperty",
          "description": "Returns the property name for the given attribute `name`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_valueHasChanged",
          "description": "Returns true if a property should request an update.\nCalled when a property value is set and uses the `hasChanged`\noption for the property if present or a strict identity check.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "old"
            },
            {
              "name": "hasChanged",
              "defaultValue": "notEqual"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueFromAttribute",
          "description": "Returns the property value for the given attribute value.\nCalled via the `attributeChangedCallback` and uses the property's `type`\nor `type.fromAttribute` property option.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueToAttribute",
          "description": "Returns the attribute value for the given property value. If this\nreturns undefined, the property will *not* be reflected to an attribute.\nIf this returns null, the attribute will be removed, otherwise the\nattribute will be set to the value.\nThis uses the property's `reflect` and `type.toAttribute` property options.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        }
      ],
      "demos": [
        {
          "url": "demo/vo-merklogo.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 131,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "VoMerklogo",
      "attributes": [
        {
          "name": "kleur",
          "description": "Achtergrondkleur in hex, rgb or rgba.",
          "sourceRange": {
            "start": {
              "line": 15,
              "column": 12
            },
            "end": {
              "line": 15,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "tekst",
          "description": "Tekst die naast het logo zal gerenderd worden.",
          "sourceRange": {
            "start": {
              "line": 19,
              "column": 12
            },
            "end": {
              "line": 19,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "vo-merklogo"
    },
    {
      "description": "`vo-template`\nDe standaard template voor websites en applicaties van de Vlaamse overheid\n\n### Styling\n\nDe volgende properties en mixins zijn beschikbaar voor stijl:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--vo-template-content-style` | de content mixin | `{}`\n`--vo-template-content-inner-style` | de content element mixin | `{}`\n`--vo-template-footer-style` | de footer mixin | `{}`",
      "summary": "",
      "path": "vo-template.js",
      "properties": [
        {
          "name": "_hasRequestedUpdate",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 355,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "updateComplete",
          "type": "Promise",
          "description": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. This getter can be implemented to\nawait additional state. For example, it is sometimes useful to await a\nrendered element before fulfilling this Promise. To do this, first await\n`super.updateComplete` then any subsequent state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        }
      ],
      "methods": [
        {
          "name": "initialize",
          "description": "Performs element initialization. By default this calls `createRenderRoot`\nto create the element `renderRoot` node and captures any pre-set values for\nregistered properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_saveInstanceProperties",
          "description": "Fixes any properties set on the instance before upgrade time.\nOtherwise these would shadow the accessor and break these properties.\nThe properties are stored in a Map which is played back after the\nconstructor runs. Note, on very old versions of Safari (<=9) or Chrome\n(<=41), properties created for native platform properties like (`id` or\n`name`) may not have default values set in the element constructor. On\nthese browsers native properties appear on instances and therefore their\ndefault value will overwrite any element default (e.g. if the element sets\nthis.id = 'id' in the constructor, the 'id' will become '' since this is\nthe native platform default).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_applyInstanceProperties",
          "description": "Applies previously saved instance properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createRenderRoot",
          "description": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(Element | DocumentFragment)",
            "desc": "Returns a node into which to render."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "connectedCallback",
          "description": "Uses ShadyCSS to keep element DOM updated.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "disconnectedCallback",
          "description": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 248,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 29
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Synchronizes property values when attributes change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyToAttribute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "requestUpdate",
          "description": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} (optional) name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} (optional) old value of requesting property"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A Promise that is resolved when the update completes."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_requestPropertyUpdate",
          "description": "Requests an update for a specific property and records change information.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} old value of requesting property"
            },
            {
              "name": "options",
              "description": "{PropertyDeclaration}"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_invalidate",
          "description": "Invalidates the element causing it to asynchronously update regardless\nof whether or not any property changes are pending. This method is\nautomatically called when any registered property changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 354,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_validate",
          "description": "Validates the element by updating it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_markUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 379,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "shouldUpdate",
          "description": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 405,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "update",
          "description": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update.\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lit-element.js",
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "updated",
          "description": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 433,
              "column": 4
            },
            "end": {
              "line": 433,
              "column": 34
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "firstUpdated",
          "description": "Invoked when the element is first updated. Implement to perform one time\nwork on the element after update.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 443,
              "column": 4
            },
            "end": {
              "line": 443,
              "column": 39
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "render",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 1
            },
            "end": {
              "line": 86,
              "column": 2
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [
        {
          "name": "createProperty",
          "description": "Creates a property accessor on the element prototype if one does not exist.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_finalize",
          "description": "Creates property accessors for registered properties and ensures\nany superclasses are also finalized.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeNameForProperty",
          "description": "Returns the property name for the given attribute `name`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_valueHasChanged",
          "description": "Returns true if a property should request an update.\nCalled when a property value is set and uses the `hasChanged`\noption for the property if present or a strict identity check.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "old"
            },
            {
              "name": "hasChanged",
              "defaultValue": "notEqual"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueFromAttribute",
          "description": "Returns the property value for the given attribute value.\nCalled via the `attributeChangedCallback` and uses the property's `type`\nor `type.fromAttribute` property option.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueToAttribute",
          "description": "Returns the attribute value for the given property value. If this\nreturns undefined, the property will *not* be reflected to an attribute.\nIf this returns null, the attribute will be removed, otherwise the\nattribute will be set to the value.\nThis uses the property's `reflect` and `type.toAttribute` property options.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        }
      ],
      "demos": [
        {
          "url": "demo/vo-template.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 87,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "VoTemplate",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "vo-template"
    },
    {
      "description": "`vo-upload`\nDe upload component voor gebruik in websites en applicaties van de Vlaamse overheid\n\n### Events\n\nDe volgende events zijn beschikbaar:\n\nEvent | Uitleg | Detail object\n------|-------------|--------------\n`vo-upload-bestand-toegevoegd` | Wordt afgevuurd wanneer er een bestand werd toegevoegd. | { bestand }\n`vo-upload-bestand-verwijderd` | Wordt afgevuurd wanneer er een bestand werd verwijderd. | { bestand }\n`vo-upload-versturen` | Wordt afgevuurd vlak voordat het bestand verstuurd wordt naar de url. | { bestand }\n`vo-upload-succes` | Wordt afgevuurd wanneer een bestand succesvol werd opgeladen. | { bestand, response }\n`vo-upload-fout` | Wordt afgevuurd wanneer een bestand niet kon opgeladen worden vanwege een fout. | { bestand, fout }",
      "summary": "",
      "path": "vo-upload.js",
      "properties": [
        {
          "name": "_hasRequestedUpdate",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 355,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "updateComplete",
          "type": "Promise",
          "description": "Returns a Promise that resolves when the element has completed updating.\nThe Promise value is a boolean that is `true` if the element completed the\nupdate without triggering another update. The Promise result is `false` if\na property was set inside `updated()`. This getter can be implemented to\nawait additional state. For example, it is sometimes useful to await a\nrendered element before fulfilling this Promise. To do this, first await\n`super.updateComplete` then any subsequent state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "url",
          "type": "string | null | undefined",
          "description": "URL waarnaar geupload moet worden.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 12
            },
            "end": {
              "line": 53,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "toegelaten-extensies",
          "type": "Array | null | undefined",
          "description": "Een lijst van toegelaten extensies.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 12
            },
            "end": {
              "line": 59,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "toegelaten-mimetypes",
          "type": "Array | null | undefined",
          "description": "Een lijst van toegelaten mimetypes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 12
            },
            "end": {
              "line": 65,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "maximum-grootte",
          "type": "number | null | undefined",
          "description": "De maximum grootte van een bestand in bytes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 12
            },
            "end": {
              "line": 71,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "param",
          "type": "string | null | undefined",
          "description": "Het veld in de multipart/form-data body waarin het bestand gestoken moet worden.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 12
            },
            "end": {
              "line": 77,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "maximum-aantal-bestanden",
          "type": "number | null | undefined",
          "description": "Het maximum aantal bestanden dat men mag uploaden.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 12
            },
            "end": {
              "line": 83,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "auto-upload",
          "type": "boolean | null | undefined",
          "description": "Bepaalt of er automatisch geupload moet worden.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 12
            },
            "end": {
              "line": 89,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "initialize",
          "description": "Performs element initialization. By default this calls `createRenderRoot`\nto create the element `renderRoot` node and captures any pre-set values for\nregistered properties.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_saveInstanceProperties",
          "description": "Fixes any properties set on the instance before upgrade time.\nOtherwise these would shadow the accessor and break these properties.\nThe properties are stored in a Map which is played back after the\nconstructor runs. Note, on very old versions of Safari (<=9) or Chrome\n(<=41), properties created for native platform properties like (`id` or\n`name`) may not have default values set in the element constructor. On\nthese browsers native properties appear on instances and therefore their\ndefault value will overwrite any element default (e.g. if the element sets\nthis.id = 'id' in the constructor, the 'id' will become '' since this is\nthe native platform default).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_applyInstanceProperties",
          "description": "Applies previously saved instance properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 220,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "createRenderRoot",
          "description": "Returns the node into which the element should render and by default\ncreates and returns an open shadowRoot. Implement to customize where the\nelement's DOM is rendered. For example, to render into the element's\nchildNodes, return `this`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 228,
              "column": 4
            },
            "end": {
              "line": 230,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(Element | DocumentFragment)",
            "desc": "Returns a node into which to render."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "connectedCallback",
          "description": "Uses ShadyCSS to keep element DOM updated.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "disconnectedCallback",
          "description": "Allows for `super.disconnectedCallback()` in extensions while\nreserving the possibility of making non-breaking feature additions\nwhen disconnecting at some point in the future.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 248,
              "column": 4
            },
            "end": {
              "line": 248,
              "column": 29
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Synchronizes property values when attributes change.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 252,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "old"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyToAttribute",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 281,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "requestUpdate",
          "description": "Requests an update which is processed asynchronously. This should\nbe called when an element should update based on some state not triggered\nby setting a property. In this case, pass no arguments. It should also be\ncalled when manually implementing a property setter. In this case, pass the\nproperty `name` and `oldValue` to ensure that any configured property\noptions are honored. Returns the `updateComplete` Promise which is resolved\nwhen the update completes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 307,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} (optional) name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} (optional) old value of requesting property"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "A Promise that is resolved when the update completes."
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_requestPropertyUpdate",
          "description": "Requests an update for a specific property and records change information.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 336,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "description": "{PropertyKey} name of requesting property"
            },
            {
              "name": "oldValue",
              "description": "{any} old value of requesting property"
            },
            {
              "name": "options",
              "description": "{PropertyDeclaration}"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_invalidate",
          "description": "Invalidates the element causing it to asynchronously update regardless\nof whether or not any property changes are pending. This method is\nautomatically called when any registered property changes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 354,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_validate",
          "description": "Validates the element by updating it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_markUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 379,
              "column": 4
            },
            "end": {
              "line": 382,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "shouldUpdate",
          "description": "Controls whether or not `update` should be called when the element requests\nan update. By default, this method always returns `true`, but this can be\ncustomized to control when to update.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 405,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "update",
          "description": "Updates the element. This method reflects property values to attributes\nand calls `render` to render DOM via lit-html. Setting properties inside\nthis method will *not* trigger another update.\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lit-element.js",
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "LitElement"
        },
        {
          "name": "updated",
          "description": "Invoked whenever the element is updated. Implement to perform\npost-updating tasks via DOM APIs, for example, focusing an element.\n\nSetting properties inside this method will trigger the element to update\nagain after this update cycle completes.\n\n* @param _changedProperties Map of changed properties with old values",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 433,
              "column": 4
            },
            "end": {
              "line": 433,
              "column": 34
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_changedProperties"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "firstUpdated",
          "description": "Configuratie van de dropzone na de eerste rendering.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "Rendert het element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 4
            },
            "end": {
              "line": 233,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        },
        {
          "name": "_dropzoneMaxFilesize",
          "description": "Berekent de maximum bestand grootte.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 140,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Number"
          }
        },
        {
          "name": "_dropzoneAcceptedFiles",
          "description": "Genereert een array die de toegelaten bestand types bepaalt.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Array"
          }
        },
        {
          "name": "_fireEvent",
          "description": "Gooit een vo-upload event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "naam"
            },
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "upload",
          "description": "Upload alle bestanden die de gebruiker geselecteerd heeft.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "createProperty",
          "description": "Creates a property accessor on the element prototype if one does not exist.\nThe property setter calls the property's `hasChanged` property option\nor uses a strict identity check to determine whether or not to request\nan update.",
          "privacy": "public",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 79,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options",
              "defaultValue": "defaultPropertyDeclaration"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_finalize",
          "description": "Creates property accessors for registered properties and ensures\nany superclasses are also finalized.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 113,
              "column": 4
            },
            "end": {
              "line": 134,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_attributeNameForProperty",
          "description": "Returns the property name for the given attribute `name`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_valueHasChanged",
          "description": "Returns true if a property should request an update.\nCalled when a property value is set and uses the `hasChanged`\noption for the property if present or a strict identity check.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "old"
            },
            {
              "name": "hasChanged",
              "defaultValue": "notEqual"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueFromAttribute",
          "description": "Returns the property value for the given attribute value.\nCalled via the `attributeChangedCallback` and uses the property's `type`\nor `type.fromAttribute` property option.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 155,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_propertyValueToAttribute",
          "description": "Returns the attribute value for the given property value. If this\nreturns undefined, the property will *not* be reflected to an attribute.\nIf this returns null, the attribute will be removed, otherwise the\nattribute will be set to the value.\nThis uses the property's `reflect` and `type.toAttribute` property options.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../vodomg-litelement/@polymer/lit-element/lib/updating-element.js",
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 178,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "options"
            }
          ],
          "inheritedFrom": "UpdatingElement"
        },
        {
          "name": "_dropzoneBestandNaarVoUploadBestand",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 172,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "bestand"
            }
          ]
        }
      ],
      "demos": [
        {
          "url": "demo/vo-upload.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 234,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "VoUpload",
      "attributes": [
        {
          "name": "url",
          "description": "URL waarnaar geupload moet worden.",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 12
            },
            "end": {
              "line": 53,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "toegelaten-extensies",
          "description": "Een lijst van toegelaten extensies.",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 12
            },
            "end": {
              "line": 59,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "toegelaten-mimetypes",
          "description": "Een lijst van toegelaten mimetypes.",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 12
            },
            "end": {
              "line": 65,
              "column": 13
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "maximum-grootte",
          "description": "De maximum grootte van een bestand in bytes.",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 12
            },
            "end": {
              "line": 71,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "param",
          "description": "Het veld in de multipart/form-data body waarin het bestand gestoken moet worden.",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 12
            },
            "end": {
              "line": 77,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "maximum-aantal-bestanden",
          "description": "Het maximum aantal bestanden dat men mag uploaden.",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 12
            },
            "end": {
              "line": 83,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "auto-upload",
          "description": "Bepaalt of er automatisch geupload moet worden.",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 12
            },
            "end": {
              "line": 89,
              "column": 13
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "vo-upload"
    }
  ]
}
